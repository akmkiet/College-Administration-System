/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package college_system;

import java.awt.HeadlessException;
import javax.swing.*;
import java.sql.*;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
/**
 *
 * @author AJEET
 */
public class Admin_Forgot extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    Statement stmt;
    ResultSet rst;
    int change=0;
    /**
     * Creates new form Admin_Forgot
     */
    public Admin_Forgot() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        email = new javax.swing.JLabel();
        emailid = new javax.swing.JTextField();
        email1 = new javax.swing.JLabel();
        email2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        newpassword = new javax.swing.JPasswordField();
        confirmpassword = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Change Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setDoubleBuffered(false);

        email.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        email.setForeground(new java.awt.Color(255, 255, 255));
        email.setText("Email Id");
        email.setMaximumSize(new java.awt.Dimension(127, 30));
        email.setMinimumSize(new java.awt.Dimension(0, 30));
        email.setPreferredSize(new java.awt.Dimension(0, 30));

        emailid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        emailid.setMaximumSize(new java.awt.Dimension(116, 30));
        emailid.setMinimumSize(new java.awt.Dimension(0, 30));
        emailid.setPreferredSize(new java.awt.Dimension(0, 30));
        emailid.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                emailidMouseMoved(evt);
            }
        });
        emailid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emailidMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                emailidMouseReleased(evt);
            }
        });
        emailid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailidKeyTyped(evt);
            }
        });

        email1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        email1.setForeground(new java.awt.Color(255, 255, 255));
        email1.setText("New Password");
        email1.setMaximumSize(new java.awt.Dimension(127, 30));
        email1.setMinimumSize(new java.awt.Dimension(0, 30));
        email1.setPreferredSize(new java.awt.Dimension(0, 30));

        email2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        email2.setForeground(new java.awt.Color(255, 255, 255));
        email2.setText("Confirm Password");
        email2.setMaximumSize(new java.awt.Dimension(127, 30));
        email2.setMinimumSize(new java.awt.Dimension(0, 30));
        email2.setPreferredSize(new java.awt.Dimension(0, 30));

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jToggleButton1.setText("Save");
        jToggleButton1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jToggleButton1.setMaximumSize(new java.awt.Dimension(124, 31));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jToggleButton2.setText("Back");
        jToggleButton2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jToggleButton2.setMaximumSize(new java.awt.Dimension(124, 31));
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        newpassword.setEditable(false);
        newpassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newpassword.setMaximumSize(new java.awt.Dimension(116, 30));
        newpassword.setMinimumSize(new java.awt.Dimension(0, 30));
        newpassword.setPreferredSize(new java.awt.Dimension(0, 30));
        newpassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newpasswordMouseEntered(evt);
            }
        });
        newpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newpasswordKeyPressed(evt);
            }
        });

        confirmpassword.setEditable(false);
        confirmpassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        confirmpassword.setMaximumSize(new java.awt.Dimension(116, 30));
        confirmpassword.setMinimumSize(new java.awt.Dimension(0, 30));
        confirmpassword.setPreferredSize(new java.awt.Dimension(0, 30));

        jButton1.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jButton1.setText("Send OTP");
        jButton1.setMaximumSize(new java.awt.Dimension(127, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label.setBackground(new java.awt.Color(255, 255, 255));
        label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label.setForeground(new java.awt.Color(0, 255, 0));
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setMaximumSize(new java.awt.Dimension(116, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(10, 10, 10)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailid, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(email2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(confirmpassword, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(newpassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newpassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confirmpassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(email2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(505, 505, 505)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(500, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        String str="";
        while( str.equalsIgnoreCase(newpassword.getText()))
        {
            JOptionPane.showMessageDialog(null,"Enter new Password");
            return;
        }
        while( str.equalsIgnoreCase(confirmpassword.getText()))
        {
            JOptionPane.showMessageDialog(null,"Enter above Password");
            return;
        }
        if(newpassword.getText().equals(confirmpassword.getText()))
        {
           String em=null;
           String user=null;
            try
            {
                String sql = "SELECT `A_Email`,`A_Username` FROM `A_Register` WHERE `A_Id`>0";
                con = (Connection) DriverManager.getConnection("jdbc:sqlite:C:/sqllite/System.db");
                pst = (PreparedStatement) con.prepareStatement(sql);
                rst = pst.executeQuery();
                while(rst.next())
                {
                    em  = rst.getString(1);
                    user = rst.getString(2);
                }
                if(em.equals(emailid.getText()))
                {
                  try
                   { 
                   con = (Connection) DriverManager.getConnection("jdbc:sqlite:C:/sqllite/System.db");
                   String sql1 = "UPDATE `A_Register` SET `A_Password`=?,`A_C_Password`=? WHERE `A_Email`=?";
                   pst = (PreparedStatement) con.prepareStatement(sql1);
                   pst.setString(3, emailid.getText());
                   pst.setString(1, newpassword.getText());
                   pst.setString(2, confirmpassword.getText());
                   pst.executeUpdate();  
                   JOptionPane.showMessageDialog(null,"Wait...................");
                   Properties props = new Properties(); 
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication("ajeetkumar99190@gmail.com","9598725268");
                }        
                }  
                );
        try
        {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("ajeet.1510010@kiet.edu"));
            message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailid.getText()));
            message.setSubject("College Admin updated Details");
            message.setText("Dear Admin,\n" +"\n" +"Thank you for updating Password in College Admin Portal, We have set your new Password. \n "
                    + "Here are your new details for future Aspects,\n\nUsername : "+user+"\n\nPassword : "+newpassword.getText()+"\n\n"
                            + "Thanks........");
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "Password Updated Succesfully");
        }
        catch(MessagingException e)
        {
           JOptionPane.showMessageDialog(null, "Invalid Email Id");
           return;
        }
                   
                   
                   
                   }
                   catch(SQLException e)
                   {
                       JOptionPane.showMessageDialog(null,"Updation Problem");
                   }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Enter registered Email Id!");
                }

            }
            catch(HeadlessException | SQLException e)
            {
                JOptionPane.showMessageDialog(null,"Fault in Database!");
            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        try {
            Index_Page ip = new Index_Page();
            this.setVisible(false);
            ip.setVisible(true);
        } catch (Exception ex) {
            
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void emailidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailidKeyReleased
        
    }//GEN-LAST:event_emailidKeyReleased

    private void emailidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailidKeyTyped
       
    }//GEN-LAST:event_emailidKeyTyped

    private void emailidMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailidMouseExited
        
    }//GEN-LAST:event_emailidMouseExited

    private void emailidMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailidMouseMoved
     
    }//GEN-LAST:event_emailidMouseMoved

    private void emailidMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailidMouseReleased
       
    }//GEN-LAST:event_emailidMouseReleased

    private void newpasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newpasswordMouseEntered
        
    }//GEN-LAST:event_newpasswordMouseEntered

    private void newpasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpasswordKeyPressed
     
    }//GEN-LAST:event_newpasswordKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(emailid.equals(null))
        {
            JOptionPane.showMessageDialog(null, "Enter Email Id");
            return;
        }
        Random rand = new Random();
        String id = String.format("%04d", rand.nextInt(10000));
        JOptionPane.showMessageDialog(null, "Click Ok and Wait......");
        Properties props = new Properties(); 
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication("ajeetkumar99190@gmail.com","9598725268");
                }        
                }  
                );
        try
        {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("ajeet.1510010@kiet.edu"));
            message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emailid.getText()));
            message.setSubject("College Admin Login OTP");
            message.setText("Dear Admin,\n\nYour one time password is valid upto 10min\n\nOTP : "+id+"\n\nThanks...........");
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "OTP is sent, Check out your Email");
        }
        catch(MessagingException e)
        {
           JOptionPane.showMessageDialog(null, "Connect to Internet");
           return;
        }   
        String str = JOptionPane.showInputDialog(null,"Enter OTP .?");
        if (id.equals(str))
        {
            change=1;
            label.setText("Verified");
            newpassword.setEditable(true);
            confirmpassword.setEditable(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Forgot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmpassword;
    private javax.swing.JLabel email;
    private javax.swing.JLabel email1;
    private javax.swing.JLabel email2;
    private javax.swing.JTextField emailid;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JLabel label;
    private javax.swing.JPasswordField newpassword;
    // End of variables declaration//GEN-END:variables
}
